@mixin detect($browser) {
  @if $browser == firefox {
    @supports (-moz-appearance: none) {
      @content;
    }
  } @else if $browser == chrome {
    @supports (contain: paint) and (not (-moz-appearance: none)) {
      @content;
    }
  } @else if $browser == safari {
    @media not all and (min-resolution: 0.001dpcm) {
      @supports (-webkit-appearance: none) and (stroke-color: transparent) {
        @content;
      }
    }
    // @supports (-webkit-touch-callout: none) or (selector(*:nth-child(1 of x))) {
    //   @content;
    // }
  } @else if $browser == edge {
    @supports (not (-webkit-hyphens: none)) and (not (-moz-appearance: none)) and (list-style-type: '*') {
      @content;
    }
  } @else if $browser == opera {
    @supports (-webkit-appearance: none) and (not (contain: paint)) and (not (min-resolution: 0.001dpcm)) {
      @content;
    }
    // @supports (-webkit-appearance: none) and (not (contain: paint)) and (not (selector(*:nth-child(1 of x)))) {
    //   @content;
    // }
  }
}

@mixin media($args...) {
  $media-type: 'only screen';
  $media-type-key: 'media-type';
  $args: keywords($args);
  $expr: '';

  @if map.has-key($args, $media-type-key) {
    $media-type: map.get($args, $media-type-key);
    $args: map.remove($args, $media-type-key);
  }

  $expr: '#{$media-type}';

  @each $key, $value in $args {
    @if $value {
      $expr: '#{$expr} and (#{$key}: #{$value})';
    }
  }

  @media #{$expr} {
    @content;
  }
}
