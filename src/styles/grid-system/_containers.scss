/// Generates Grid System container breakpoints selectors
/// @param {object} $breakpoints [$dout-gs-breakpoints] - definition of all the breakpoints
@mixin container-breakpoints($breakpoints: $dout-gs-breakpoints) {
  @each $breakpoint-key, $breakpoint in $breakpoints {
    $cw: map.get($breakpoint, cw);
    $min-vw: map.get($breakpoint, min-vw);
    $max-vw: map.get($breakpoint, max-vw);

    @include helpers.media($media-type: screen, $min-width: $min-vw) {
      @at-root {
        :root {
          --dout--gs--container--width: #{$cw};
        }
      }
    }
  }
}

/// Generates Grid System container selectors
/// @param {object} $breakpoints [$dout-gs-breakpoints] - definition of all the breakpoints
@mixin containers($breakpoints: $dout-gs-breakpoints) {
  :where(container, .container, [container]) {
    display: flex;
    flex-flow: column nowrap;

    width: var(--dout--gs--container--width);
    height: auto;
    padding: 0;
    margin: 0 auto;

    gap: var(--dout--gs--v-gutter);
  }

  [fluid] {
    :where(container, .container, [container]) {
      --dout--gs--container--width: 100%;
    }
  }

  @include container-breakpoints($breakpoints);
}
