$display-values: (
  inline: inline,
  inline-block: inline-block,
  block: block,
  grid: grid,
  table: table,
  table-row: table-row,
  table-cell: table-cell,
  flex: flex,
  inline-flex: inline-flex,
  none: none
);

/// Display breakpoint selector mixin
/// @param {string} $key ['']
@mixin display-breakpoint-selector($key: '') {
  $prefix: '';

  @if $key != '' {
    $prefix: '#{$key}-';
  }

  @each $key, $value in $display-values {
    [display~='#{$prefix}#{$value}'] {
      --d-value: #{$value};
    }
  }
}

/// Display utility mixin
/// @param {object} $breakpoints [$dout-gs-breakpoints]
@mixin display($breakpoints) {
  [display] {
    --d-value: initial;

    display: var(--d-value);
  }

  @include display-breakpoint-selector();

  @each $key, $breakpoint in $breakpoints {
    $min-vw: map.get($breakpoint, min-vw);

    @include helpers.media($media-type: screen, $min-width: $min-vw) {
      @include display-breakpoint-selector($key);
    }
  }
}

/// Utilities mixin
/// @param {object} $breakpoints [$dout-gs-breakpoints]
@mixin utilities($breakpoints: $dout-gs-breakpoints) {
  @include display($breakpoints);
}
