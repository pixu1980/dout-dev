@use 'sass:map';

@function get-breakpoint-value($breakpoint-key, $breakpoint-value: min-vw, $breakpoints) {
  @return map.get($breakpoints, $breakpoint-key, $breakpoint-value);
}

/// Extends the breakpoints objects by adding the max viewport width value
/// @param {object} $breakpoints [$dout-gs-breakpoints] - definition of all the breakpoints
@function extend-breakpoints($breakpoints: $dout-gs-breakpoints-base) {
  $breakpoints-keys: map.keys($breakpoints);
  $breakpoints-values: map.values($breakpoints);

  $breakpoint: null;
  $breakpoint-prev: null;

  @for $i from length($breakpoints-keys) * -1 through -1 {
    $breakpoint-key: nth($breakpoints-keys, abs($i));
    $breakpoint: nth($breakpoints-values, abs($i));

    $max-vw: null;

    @if $breakpoint-prev != null {
      $max-vw: map.get($breakpoint-prev, min-vw) - 0.01px;

      $breakpoints: map.deep-merge(
        $breakpoints,
        (
          $breakpoint-key:
            map.deep-merge(
              $breakpoint,
              (
                max-vw: $max-vw
              )
            )
        )
      );
    }

    $breakpoint-prev: $breakpoint;
  }

  @return $breakpoints;
}
